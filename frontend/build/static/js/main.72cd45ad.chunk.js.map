{"version":3,"sources":["serviceWorker.js","withRoot.js","components/Track/SearchTracks.js","components/Shared/AudioPlayer.js","components/Track/LikeTrack.js","components/Track/DeleteTrack.js","components/Shared/Error.js","components/Track/UpdateTrack.js","components/Track/TrackList.js","components/Track/CreateTrack.js","components/Shared/Loading.js","pages/App.js","pages/Profile.js","components/Auth/Signout.js","components/Shared/Header.js","Root.js","components/Auth/Login.js","components/Auth/Register.js","components/Auth/index.js","index.js"],"names":["Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","light","indigo","main","dark","secondary","orange","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","core_styles","CssBaseline_default","SEARCH_TRACKS_QUERY","gql","_templateObject","withStyles","root","padding","margin","spacing","unit","display","alignItems","_ref","classes","setSearchResults","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","inputEl","useRef","clearSearchInput","current","focus","handleSubmit","_ref2","asyncToGenerator","regenerator_default","mark","_callee","event","client","res","wrap","_context","prev","next","preventDefault","query","variables","sent","data","tracks","stop","_x","_x2","apply","this","arguments","react_apollo_esm","onSubmit","Paper_default","className","elevation","IconButton_default","onClick","Clear_default","TextField_default","fullWidth","placeholder","InputProps","disableUnderline","onChange","target","value","inputRef","type","Search_default","AudioPlayer","url","ReactPlayer_default","height","width","controls","CREATE_LIKE_MUTATION","LikeTrack_templateObject","iconButton","color","icon","marginLeft","trackId","likeCount","currentUser","useContext","UserContext","mutation","onCompleted","console","log","refetchQueries","ME_QUERY","createLike","stopPropagation","disabled","likeSet","findIndex","track","id","ThumbUp_default","DELETE_TRACK_MUTATION","DeleteTrack_templateObject","DeleteTrack","postedBy","update","cache","deleteTrack","readQuery","GET_TRACKS_QUERY","index","Number","concat","toConsumableArray","slice","writeQuery","DeleteForeverOutlined_default","snackbar","error","open","setOpen","Snackbar_default","message","action","Button_default","size","UPDATE_TRACK_MUTATION","UpdateTrack_templateObject","container","flexWrap","dialog","maxWidth","textField","cancel","save","button","input","_useState3","title","_useState4","setTitle","_useState5","description","_useState6","setDescription","_useState7","_useState8","file","setFile","_useState9","_useState10","submitting","setSubmitting","_useState11","_useState12","fileError","setFileError","isCurrentUser","handleAudioChange","selectedFile","files","name","handleAudioUpload","FormData","append","axios","post","abrupt","t0","_ref3","_callee2","updateTrack","uploadedUrl","_context2","Fragment","Edit_default","_ref4","loading","Shared_Error","Dialog_default","DialogTitle_default","DialogContent_default","DialogContentText_default","FormControl_default","label","multiline","rows","required","accept","htmlFor","variant","component","LibraryMusic_default","FormHelperText_default","DialogActions_default","trim","CircularProgress_default","details","link","textDecoration","&:hover","List_default","map","ExpansionPanel_default","key","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ListItem_default","Track_LikeTrack","likes","length","ListItemText_default","primaryTypographyProps","Link","to","username","Shared_AudioPlayer","ExpansionPanelDetails_default","Typography_default","ExpansionPanelActions_default","Track_UpdateTrack","Track_DeleteTrack","CREATE_TRACK_MUTATION","CreateTrack_templateObject","fab","position","bottom","right","zIndex","createTrack","Add_default","_ref5","textAlign","progress","App_templateObject","searchResults","Track_SearchTracks","Track_CreateTrack","Shared_Loading","Track_TrackList","PROFILE_QUERY","Profile_templateObject","paper","defineProperty","marginRight","marginTop","marginBottom","breakpoints","up","card","justifyContent","audioIcon","fontSize","thumbIcon","divider","params","Card_default","CardHeader_default","avatar","Avatar_default","user","subheader","format","dateJoined","AudiotrackTwoTone_default","trackSet","Divider_default","ThumbUpTwoTone_default","cursor","buttonIcon","localStorage","removeItem","writeData","isLoggedIn","handleSignout","buttonText","ExitToApp_default","flexGrow","grow","logo","faceIcon","AppBar_default","Toolbar_default","RadioTwoTone_default","noWrap","FaceTwoTone_default","Auth_Signout","React","createContext","Root_templateObject","fetchPolicy","me","BrowserRouter","Provider","Shared_Header","Switch","Route","exact","path","App","Profile","LOGIN_MUTATION","Login_templateObject","flexDirection","backgroundColor","form","submit","setNewUser","setUsername","password","setPassword","tokenAuth","setItem","token","_x3","Lock_default","called","InputLabel_default","Input_default","Transition","Slide_default","assign","direction","REGISTER_MUTATION","Register_templateObject","openTitle","verticalAlign","email","setEmail","Gavel_default","createUser","disableBackdropClick","TransitionComponent","VerifiedUserTwoTone_default","newUser","Auth_Register","Auth_Login","ApolloClient","uri","process","DOMAIN_NAME","API_NAME","fetchOptions","credentials","request","operation","getItem","setContext","headers","Authorization","clientState","defaults","IS_LOGGED_IN_QUERY","src_templateObject","ReactDOM","render","src_Root","Auth","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.72cd45ad.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: indigo[500],\n      main: indigo[700],\n      dark: indigo[900]\n    },\n    secondary: {\n      light: orange[300],\n      main: orange[500],\n      dark: orange[700]\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        {/* https://material-ui.com/getting-started/usage/#cssbaseline */}\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import React, { useState, useRef } from \"react\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst SearchTracks = ({ classes, setSearchResults }) => {\n  const [search, setSearch] = useState(\"\");\n  const inputEl = useRef();\n\n  const clearSearchInput = () => {\n    setSearchResults([]);\n    setSearch(\"\");\n    inputEl.current.focus();\n  };\n\n  const handleSubmit = async (event, client) => {\n    event.preventDefault();\n    const res = await client.query({\n      query: SEARCH_TRACKS_QUERY,\n      variables: { search }\n    });\n    setSearchResults(res.data.tracks);\n  };\n\n  return (\n    <ApolloConsumer>\n      {client => (\n        <form onSubmit={event => handleSubmit(event, client)}>\n          <Paper className={classes.root} elevation={1}>\n            <IconButton onClick={clearSearchInput}>\n              <ClearIcon />\n            </IconButton>\n            <TextField\n              fullWidth\n              placeholder=\"Поиск треков\"\n              InputProps={{\n                disableUnderline: true\n              }}\n              onChange={event => setSearch(event.target.value)}\n              value={search}\n              inputRef={inputEl}\n            />\n            <IconButton type=\"submit\">\n              <SearchIcon />\n            </IconButton>\n          </Paper>\n        </form>\n      )}\n    </ApolloConsumer>\n  );\n};\n\nconst SEARCH_TRACKS_QUERY = gql`\n  query($search: String) {\n    tracks(search: $search) {\n      id\n      title\n      description\n      url\n      likes {\n        id\n      }\n      postedBy {\n        id\n        username\n      }\n    }\n  }\n`;\n\nconst styles = theme => ({\n  root: {\n    padding: \"2px 4px\",\n    margin: theme.spacing.unit,\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n});\n\nexport default withStyles(styles)(SearchTracks);\n","import React from \"react\";\nimport ReactPlayer from \"react-player\";\n\nconst AudioPlayer = ({ url }) => (\n  <div>\n    <ReactPlayer url={url} height=\"30px\" width=\"500px\" controls={true} />\n  </div>\n);\n\nexport default AudioPlayer;\n","import React, { useContext } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\n\nimport { UserContext, ME_QUERY } from \"../../Root\";\n\nconst LikeTrack = ({ classes, trackId, likeCount }) => {\n  const currentUser = useContext(UserContext);\n\n  const handleDisableLikedTrack = () => {\n    const userLikes = currentUser.likeSet;\n    const isTrackLiked =\n      userLikes.findIndex(({ track }) => track.id === trackId) > -1;\n    return isTrackLiked;\n  };\n\n  return (\n    <Mutation\n      mutation={CREATE_LIKE_MUTATION}\n      variables={{ trackId }}\n      onCompleted={data => {\n        console.log({ data });\n      }}\n      refetchQueries={() => [{ query: ME_QUERY }]}\n    >\n      {createLike => (\n        <IconButton\n          onClick={event => {\n            event.stopPropagation();\n            createLike();\n          }}\n          className={classes.iconButton}\n          disabled={handleDisableLikedTrack()}\n        >\n          {likeCount}\n          <ThumbUpIcon className={classes.icon} />\n        </IconButton>\n      )}\n    </Mutation>\n  );\n};\n\nconst CREATE_LIKE_MUTATION = gql`\n  mutation($trackId: Int!) {\n    createLike(trackId: $trackId) {\n      track {\n        id\n        likes {\n          id\n        }\n      }\n    }\n  }\n`;\n\nconst styles = theme => ({\n  iconButton: {\n    color: \"deeppink\"\n  },\n  icon: {\n    marginLeft: theme.spacing.unit / 2\n  }\n});\n\nexport default withStyles(styles)(LikeTrack);\n","import React, { useContext } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TrashIcon from \"@material-ui/icons/DeleteForeverOutlined\";\n\nimport { UserContext } from \"../../Root\";\nimport { GET_TRACKS_QUERY } from \"../../pages/App\";\n\nconst DeleteTrack = ({ track }) => {\n  const currentUser = useContext(UserContext);\n  const isCurrentUser = currentUser.id === track.postedBy.id;\n\n  const handleUpdateCache = (cache, { data: { deleteTrack } }) => {\n    const data = cache.readQuery({ query: GET_TRACKS_QUERY });\n    const index = data.tracks.findIndex(\n      track => Number(track.id) === deleteTrack.trackId\n    );\n    // data.tracks.splice(index, 1)\n    const tracks = [\n      ...data.tracks.slice(0, index),\n      ...data.tracks.slice(index + 1)\n    ];\n    cache.writeQuery({ query: GET_TRACKS_QUERY, data: { tracks } });\n  };\n\n  return (\n    isCurrentUser && (\n      <Mutation\n        mutation={DELETE_TRACK_MUTATION}\n        variables={{ trackId: track.id }}\n        onCompleted={data => {\n          console.log({ data });\n        }}\n        update={handleUpdateCache}\n        // refetchQueries={() => [{ query: GET_TRACKS_QUERY }]}\n      >\n        {deleteTrack => (\n          <IconButton onClick={deleteTrack}>\n            <TrashIcon />\n          </IconButton>\n        )}\n      </Mutation>\n    )\n  );\n};\n\nconst DELETE_TRACK_MUTATION = gql`\n  mutation($trackId: Int!) {\n    deleteTrack(trackId: $trackId) {\n      trackId\n    }\n  }\n`;\n\nexport default DeleteTrack;\n","import React, { useState } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nconst Error = ({ classes, error }) => {\n  const [open, setOpen] = useState(true);\n\n  return (\n    <Snackbar\n      open={open}\n      className={classes.snackbar}\n      message={error.message}\n      action={\n        <Button onClick={() => setOpen(false)} color=\"secondary\" size=\"small\">\n          Close\n        </Button>\n      }\n    />\n  );\n};\n\nconst styles = theme => ({\n  snackbar: {\n    margin: theme.spacing.unit\n  }\n});\n\nexport default withStyles(styles)(Error);\n","import React, { useState, useContext } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport axios from \"axios\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\n\nimport { UserContext } from \"../../Root\";\nimport Error from \"../Shared/Error\";\n\nconst UpdateTrack = ({ classes, track }) => {\n  const currentUser = useContext(UserContext);\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState(track.title);\n  const [description, setDescription] = useState(track.description);\n  const [file, setFile] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n  const [fileError, setFileError] = useState(\"\");\n  const isCurrentUser = currentUser.id === track.postedBy.id;\n\n  const handleAudioChange = event => {\n    const selectedFile = event.target.files[0];\n    const fileSizeLimit = 10000000; // 10mb\n    if (selectedFile && selectedFile.size > fileSizeLimit) {\n      setFileError(`${selectedFile.name}: File size too large`);\n    } else {\n      setFile(selectedFile);\n      setFileError(\"\");\n    }\n  };\n\n  const handleAudioUpload = async () => {\n    try {\n      const data = new FormData();\n      data.append(\"file\", file);\n      data.append(\"resource_type\", \"raw\");\n      data.append(\"upload_preset\", \"react-tracks\");\n      data.append(\"cloud_name\", \"nyancetch\");\n      const res = await axios.post(\n        \"https://api.cloudinary.com/v1_1/nyancetch/raw/upload\",\n        data\n      );\n      return res.data.url;\n    } catch (err) {\n      console.error(\"Error uploading file\", err);\n      setSubmitting(false);\n    }\n  };\n\n  const handleSubmit = async (event, updateTrack) => {\n    event.preventDefault();\n    setSubmitting(true);\n    // upload our audio file, get returned url from API\n    const uploadedUrl = await handleAudioUpload();\n    updateTrack({\n      variables: { trackId: track.id, title, description, url: uploadedUrl }\n    });\n  };\n\n  return (\n    isCurrentUser && (\n      <>\n        {/* Update Track Button */}\n        <IconButton onClick={() => setOpen(true)}>\n          <EditIcon />\n        </IconButton>\n\n        {/* Update Track Dialog */}\n        <Mutation\n          mutation={UPDATE_TRACK_MUTATION}\n          onCompleted={data => {\n            console.log({ data });\n            setSubmitting(false);\n            setOpen(false);\n            setTitle(\"\");\n            setDescription(\"\");\n            setFile(\"\");\n          }}\n        >\n          {(updateTrack, { loading, error }) => {\n            if (error) return <Error error={error} />;\n\n            return (\n              <Dialog open={open} className={classes.dialog}>\n                <form onSubmit={event => handleSubmit(event, updateTrack)}>\n                  <DialogTitle>Изменить трек</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                      Изменить название, описание и аудиофайл (Максимум 10MB)\n                    </DialogContentText>\n                    <FormControl fullWidth>\n                      <TextField\n                        label=\"Название\"\n                        placeholder=\"Изменить название\"\n                        onChange={event => setTitle(event.target.value)}\n                        value={title}\n                        className={classes.textField}\n                      />\n                    </FormControl>\n                    <FormControl fullWidth>\n                      <TextField\n                        multiline\n                        rows=\"4\"\n                        label=\"Описание\"\n                        placeholder=\"Изменить описание\"\n                        onChange={event => setDescription(event.target.value)}\n                        value={description}\n                        className={classes.textField}\n                      />\n                    </FormControl>\n                    <FormControl error={Boolean(fileError)}>\n                      <input\n                        id=\"audio\"\n                        required\n                        type=\"file\"\n                        accept=\"audio/mp3,audio/wav\"\n                        className={classes.input}\n                        onChange={handleAudioChange}\n                      />\n                      <label htmlFor=\"audio\">\n                        <Button\n                          variant=\"outlined\"\n                          color={file ? \"secondary\" : \"inherit\"}\n                          component=\"span\"\n                          className={classes.button}\n                        >\n                          Audio File\n                          <LibraryMusicIcon className={classes.icon} />\n                        </Button>\n                        {file && file.name}\n                        <FormHelperText>{fileError}</FormHelperText>\n                      </label>\n                    </FormControl>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button\n                      disabled={submitting}\n                      onClick={() => setOpen(false)}\n                      className={classes.cancel}\n                    >\n                      Отмена\n                    </Button>\n                    <Button\n                      disabled={\n                        submitting ||\n                        !title.trim() ||\n                        !description.trim() ||\n                        !file\n                      }\n                      type=\"submit\"\n                      className={classes.save}\n                    >\n                      {submitting ? (\n                        <CircularProgress className={classes.save} size={24} />\n                      ) : (\n                        \"Изменить\"\n                      )}\n                    </Button>\n                  </DialogActions>\n                </form>\n              </Dialog>\n            );\n          }}\n        </Mutation>\n      </>\n    )\n  );\n};\n\nconst UPDATE_TRACK_MUTATION = gql`\n  mutation($trackId: Int!, $title: String, $url: String, $description: String) {\n    updateTrack(\n      trackId: $trackId\n      title: $title\n      url: $url\n      description: $description\n    ) {\n      track {\n        id\n        title\n        description\n        url\n        likes {\n          id\n        }\n        postedBy {\n          id\n          username\n        }\n      }\n    }\n  }\n`;\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  dialog: {\n    margin: \"0 auto\",\n    maxWidth: 550\n  },\n  textField: {\n    margin: theme.spacing.unit\n  },\n  cancel: {\n    color: \"red\"\n  },\n  save: {\n    color: \"green\"\n  },\n  button: {\n    margin: theme.spacing.unit * 2\n  },\n  icon: {\n    marginLeft: theme.spacing.unit\n  },\n  input: {\n    display: \"none\"\n  }\n});\n\nexport default withStyles(styles)(UpdateTrack);\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Link } from \"react-router-dom\";\n\nimport AudioPlayer from \"../Shared/AudioPlayer\";\nimport LikeTrack from \"./LikeTrack\";\nimport DeleteTrack from \"./DeleteTrack\";\nimport UpdateTrack from \"./UpdateTrack\";\n\nconst TrackList = ({ classes, tracks }) => (\n  <List>\n    {tracks.map(track => (\n      <ExpansionPanel key={track.id}>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <ListItem className={classes.root}>\n            <LikeTrack trackId={track.id} likeCount={track.likes.length} />\n            <ListItemText\n              primaryTypographyProps={{\n                variant: \"subheading\",\n                color: \"primary\"\n              }}\n              primary={track.title}\n              secondary={\n                <Link\n                  className={classes.link}\n                  to={`/profile/${track.postedBy.id}`}\n                >\n                  {track.postedBy.username}\n                </Link>\n              }\n            />\n            <AudioPlayer url={track.url} />\n          </ListItem>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.details}>\n          <Typography variant=\"body1\">{track.description}</Typography>\n        </ExpansionPanelDetails>\n        <ExpansionPanelActions>\n          <UpdateTrack track={track} />\n          <DeleteTrack track={track} />\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    ))}\n  </List>\n);\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  details: {\n    alignItems: \"center\"\n  },\n  link: {\n    color: \"#424242\",\n    textDecoration: \"none\",\n    \"&:hover\": {\n      color: \"black\"\n    }\n  }\n};\n\nexport default withStyles(styles)(TrackList);\n","import React, { useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport axios from \"axios\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\n\nimport { GET_TRACKS_QUERY } from \"../../pages/App\";\nimport Error from \"../Shared/Error\";\n\nconst CreateTrack = ({ classes }) => {\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n  const [fileError, setFileError] = useState(\"\");\n\n  const handleAudioChange = event => {\n    const selectedFile = event.target.files[0];\n    const fileSizeLimit = 10000000; // 10mb\n    if (selectedFile && selectedFile.size > fileSizeLimit) {\n      setFileError(`${selectedFile.name}: File size too large`);\n    } else {\n      setFile(selectedFile);\n      setFileError(\"\");\n    }\n  };\n\n  const handleAudioUpload = async () => {\n    try {\n      const data = new FormData();\n      data.append(\"file\", file);\n      data.append(\"resource_type\", \"raw\");\n      data.append(\"upload_preset\", \"react-tracks\");\n      data.append(\"cloud_name\", \"nyancetch\");\n      const res = await axios.post(\n        \"https://api.cloudinary.com/v1_1/nyancetch/raw/upload\",\n        data\n      );\n      return res.data.url;\n    } catch (err) {\n      console.error(\"Error uploading file\", err);\n      setSubmitting(false);\n    }\n  };\n\n  const handleUpdateCache = (cache, { data: { createTrack } }) => {\n    const data = cache.readQuery({ query: GET_TRACKS_QUERY });\n    const tracks = data.tracks.concat(createTrack.track);\n    cache.writeQuery({ query: GET_TRACKS_QUERY, data: { tracks } });\n  };\n\n  const handleSubmit = async (event, createTrack) => {\n    event.preventDefault();\n    setSubmitting(true);\n    // upload our audio file, get returned url from API\n    const uploadedUrl = await handleAudioUpload();\n    createTrack({ variables: { title, description, url: uploadedUrl } });\n  };\n\n  return (\n    <>\n      {/* Create Track Button */}\n      <Button\n        onClick={() => setOpen(true)}\n        variant=\"fab\"\n        className={classes.fab}\n        color=\"secondary\"\n      >\n        {open ? <ClearIcon /> : <AddIcon />}\n      </Button>\n\n      {/* Create Track Dialog */}\n      <Mutation\n        mutation={CREATE_TRACK_MUTATION}\n        onCompleted={data => {\n          console.log({ data });\n          setSubmitting(false);\n          setOpen(false);\n          setTitle(\"\");\n          setDescription(\"\");\n          setFile(\"\");\n        }}\n        update={handleUpdateCache}\n        // refetchQueries={() => [{ query: GET_TRACKS_QUERY }]}\n      >\n        {(createTrack, { loading, error }) => {\n          if (error) return <Error error={error} />;\n\n          return (\n            <Dialog open={open} className={classes.dialog}>\n              <form onSubmit={event => handleSubmit(event, createTrack)}>\n                <DialogTitle>Добавить трек</DialogTitle>\n                <DialogContent>\n                  <DialogContentText>\n                    Добавьте Название, Описание и Аудиофайл (Максимум 10MB)\n                  </DialogContentText>\n                  <FormControl fullWidth>\n                    <TextField\n                      label=\"Название\"\n                      placeholder=\"Добавить название\"\n                      onChange={event => setTitle(event.target.value)}\n                      value={title}\n                      className={classes.textField}\n                    />\n                  </FormControl>\n                  <FormControl fullWidth>\n                    <TextField\n                      multiline\n                      rows=\"4\"\n                      label=\"Описание\"\n                      placeholder=\"Добавить описание\"\n                      onChange={event => setDescription(event.target.value)}\n                      value={description}\n                      className={classes.textField}\n                    />\n                  </FormControl>\n                  <FormControl error={Boolean(fileError)}>\n                    <input\n                      id=\"audio\"\n                      required\n                      type=\"file\"\n                      accept=\"audio/mp3,audio/wav\"\n                      className={classes.input}\n                      onChange={handleAudioChange}\n                    />\n                    <label htmlFor=\"audio\">\n                      <Button\n                        variant=\"outlined\"\n                        color={file ? \"secondary\" : \"inherit\"}\n                        component=\"span\"\n                        className={classes.button}\n                      >\n                        Аудиофайл\n                        <LibraryMusicIcon className={classes.icon} />\n                      </Button>\n                      {file && file.name}\n                      <FormHelperText>{fileError}</FormHelperText>\n                    </label>\n                  </FormControl>\n                </DialogContent>\n                <DialogActions>\n                  <Button\n                    disabled={submitting}\n                    onClick={() => setOpen(false)}\n                    className={classes.cancel}\n                  >\n                    Отмена\n                  </Button>\n                  <Button\n                    disabled={\n                      submitting ||\n                      !title.trim() ||\n                      !description.trim() ||\n                      !file\n                    }\n                    type=\"submit\"\n                    className={classes.save}\n                  >\n                    {submitting ? (\n                      <CircularProgress className={classes.save} size={24} />\n                    ) : (\n                      \"Добавить трек\"\n                    )}\n                  </Button>\n                </DialogActions>\n              </form>\n            </Dialog>\n          );\n        }}\n      </Mutation>\n    </>\n  );\n};\n\nconst CREATE_TRACK_MUTATION = gql`\n  mutation($title: String!, $description: String!, $url: String!) {\n    createTrack(title: $title, description: $description, url: $url) {\n      track {\n        id\n        title\n        description\n        url\n        likes {\n          id\n        }\n        postedBy {\n          id\n          username\n        }\n      }\n    }\n  }\n`;\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  dialog: {\n    margin: \"0 auto\",\n    maxWidth: 550\n  },\n  textField: {\n    margin: theme.spacing.unit\n  },\n  cancel: {\n    color: \"red\"\n  },\n  save: {\n    color: \"green\"\n  },\n  button: {\n    margin: theme.spacing.unit * 2\n  },\n  icon: {\n    marginLeft: theme.spacing.unit\n  },\n  input: {\n    display: \"none\"\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n    zIndex: \"200\"\n  }\n});\n\nexport default withStyles(styles)(CreateTrack);\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Loading = ({ classes }) => (\n  <div className={classes.root}>\n    <CircularProgress className={classes.progress} />\n  </div>\n);\n\nconst styles = theme => ({\n  root: {\n    width: \"100vw\",\n    textAlign: \"center\"\n  },\n  progress: {\n    margin: theme.spacing.unit * 2,\n    color: theme.palette.secondary.dark\n  }\n});\n\nexport default withStyles(styles)(Loading);\n","import React, { useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport SearchTracks from \"../components/Track/SearchTracks\";\nimport TrackList from \"../components/Track/TrackList\";\nimport CreateTrack from \"../components/Track/CreateTrack\";\nimport Loading from \"../components/Shared/Loading\";\nimport Error from \"../components/Shared/Error\";\n\nconst App = ({ classes }) => {\n  const [searchResults, setSearchResults] = useState([]);\n\n  return (\n    <div className={classes.container}>\n      <SearchTracks setSearchResults={setSearchResults} />\n      <CreateTrack />\n      <Query query={GET_TRACKS_QUERY}>\n        {({ data, loading, error }) => {\n          if (loading) return <Loading />;\n          if (error) return <Error error={error} />;\n          const tracks = searchResults.length > 0 ? searchResults : data.tracks;\n\n          return <TrackList tracks={tracks} />;\n        }}\n      </Query>\n    </div>\n  );\n};\n\nexport const GET_TRACKS_QUERY = gql`\n  query getTracksQuery {\n    tracks {\n      id\n      title\n      description\n      url\n      likes {\n        id\n      }\n      postedBy {\n        id\n        username\n      }\n    }\n  }\n`;\n\nconst styles = theme => ({\n  container: {\n    margin: \"0 auto\",\n    maxWidth: 960,\n    padding: theme.spacing.unit * 2\n  }\n});\n\nexport default withStyles(styles)(App);\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUpTwoTone\";\nimport AudiotrackIcon from \"@material-ui/icons/AudiotrackTwoTone\";\nimport Divider from \"@material-ui/core/Divider\";\nimport format from \"date-fns/format\";\n\nimport AudioPlayer from \"../components/Shared/AudioPlayer\";\nimport Error from \"../components/Shared/Error\";\nimport Loading from \"../components/Shared/Loading\";\n\nconst Profile = ({ classes, match }) => {\n  const id = match.params.id;\n  return (\n    <Query query={PROFILE_QUERY} variables={{ id }}>\n      {({ data, loading, error }) => {\n        if (loading) return <Loading />;\n        if (error) return <Error error={error} />;\n\n        return (\n          <div>\n            {/* User Info Card */}\n            <Card className={classes.card}>\n              <CardHeader\n                avatar={<Avatar>{data.user.username[0]}</Avatar>}\n                title={data.user.username}\n                subheader={`Присоединился ${format(\n                  data.user.dateJoined,\n                  \"MMM Do, YYYY\"\n                )}`}\n              />\n            </Card>\n\n            {/* Created Tracks */}\n            <Paper elevation={1} className={classes.paper}>\n              <Typography variant=\"title\" className={classes.title}>\n                <AudiotrackIcon className={classes.audioIcon} />\n                Добавленные треки\n              </Typography>\n              {data.user.trackSet.map(track => (\n                <div key={track.id}>\n                  <Typography>\n                    {track.title} · {track.likes.length} Нравится\n                  </Typography>\n                  <AudioPlayer url={track.url} />\n                  <Divider className={classes.divider} />\n                </div>\n              ))}\n            </Paper>\n\n            {/* Liked Tracks */}\n            <Paper elevation={1} className={classes.paper}>\n              <Typography variant=\"title\" className={classes.title}>\n                <ThumbUpIcon className={classes.thumbIcon} />\n                Понравившиеся треки\n              </Typography>\n              {data.user.likeSet.map(({ track }) => (\n                <div key={track.id}>\n                  <Typography>\n                    {track.postedBy.username} {\" | \"}\n                    {track.title} {\" | \"}\n                    Понравилось {track.likes.length}\n                    \n                  </Typography>\n                  <AudioPlayer url={track.url} />\n                  <Divider className={classes.divider} />\n                </div>\n              ))}\n            </Paper>\n          </div>\n        );\n      }}\n    </Query>\n  );\n};\n\nconst PROFILE_QUERY = gql`\n  query($id: Int!) {\n    user(id: $id) {\n      id\n      username\n      dateJoined\n      likeSet {\n        id\n        track {\n          id\n          title\n          url\n          likes {\n            id\n          }\n          postedBy {\n            id\n            username\n          }\n        }\n      }\n      trackSet {\n        id\n        title\n        url\n        likes {\n          id\n        }\n      }\n    }\n  }\n`;\n\nconst styles = theme => ({\n  paper: {\n    width: \"auto\",\n    display: \"block\",\n    padding: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    [theme.breakpoints.up(\"md\")]: {\n      width: 650,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  card: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing.unit * 2\n  },\n  audioIcon: {\n    color: \"purple\",\n    fontSize: 30,\n    marginRight: theme.spacing.unit\n  },\n  thumbIcon: {\n    color: \"green\",\n    marginRight: theme.spacing.unit\n  },\n  divider: {\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  }\n});\n\nexport default withStyles(styles)(Profile);\n","import React from \"react\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Signout = ({ classes }) => {\n  const handleSignout = client => {\n    localStorage.removeItem(\"authToken\");\n    client.writeData({ data: { isLoggedIn: false } });\n    console.log(\"Signed out user\", client);\n  };\n\n  return (\n    <ApolloConsumer>\n      {client => (\n        <Button onClick={() => handleSignout(client)}>\n          <Typography\n            variant=\"body1\"\n            className={classes.buttonText}\n            color=\"secondary\"\n          >\n            Выход\n          </Typography>\n          <ExitToApp className={classes.buttonIcon} color=\"secondary\" />\n        </Button>\n      )}\n    </ApolloConsumer>\n  );\n};\n\nconst styles = {\n  root: {\n    cursor: \"pointer\",\n    display: \"flex\"\n  },\n  buttonIcon: {\n    marginLeft: \"5px\"\n  }\n};\n\nexport default withStyles(styles)(Signout);\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport RadioIcon from \"@material-ui/icons/RadioTwoTone\";\nimport FaceIcon from \"@material-ui/icons/FaceTwoTone\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\n\nimport Signout from \"../Auth/Signout\";\n\nconst Header = ({ classes, currentUser }) => {\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar>\n        {/* Title / Logo */}\n        <Link to=\"/\" className={classes.grow}>\n          <RadioIcon className={classes.logo} color=\"secondary\" />\n          <Typography variant=\"headline\" color=\"secondary\" noWrap>\n            ReactTracks\n          </Typography>\n        </Link>\n\n        {/* Auth User Info */}\n        {currentUser && (\n          <Link to={`/profile/${currentUser.id}`} className={classes.grow}>\n            <FaceIcon className={classes.faceIcon} />\n            <Typography variant=\"headline\" className={classes.username} noWrap>\n              {currentUser.username}\n            </Typography>\n          </Link>\n        )}\n\n        {/* Signout Button */}\n        <Signout />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    margin: 0,\n    padding: 0\n  },\n  grow: {\n    flexGrow: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\"\n  },\n  logo: {\n    marginRight: theme.spacing.unit,\n    fontSize: 45\n  },\n  faceIcon: {\n    marginRight: theme.spacing.unit,\n    fontSize: 30,\n    color: \"white\"\n  },\n  username: {\n    color: \"white\",\n    fontSize: 30\n  }\n});\n\nexport default withStyles(styles)(Header);\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport withRoot from \"./withRoot\";\nimport App from \"./pages/App\";\nimport Profile from \"./pages/Profile\";\nimport Header from \"./components/Shared/Header\";\nimport Loading from \"./components/Shared/Loading\";\nimport Error from \"./components/Shared/Error\";\n\nexport const UserContext = React.createContext();\n\nconst Root = () => (\n  <Query query={ME_QUERY} fetchPolicy=\"cache-and-network\">\n    {({ data, loading, error }) => {\n      if (loading) return <Loading />;\n      if (error) return <Error error={error} />;\n      const currentUser = data.me;\n\n      return (\n        <Router>\n          <UserContext.Provider value={currentUser}>\n            <Header currentUser={currentUser} />\n            <Switch>\n              <Route exact path=\"/\" component={App} />\n              <Route path=\"/profile/:id\" component={Profile} />\n            </Switch>\n          </UserContext.Provider>\n        </Router>\n      );\n    }}\n  </Query>\n);\n\nexport const ME_QUERY = gql`\n  {\n    me {\n      id\n      username\n      email\n      likeSet {\n        track {\n          id\n        }\n      }\n    }\n  }\n`;\n\n// const GET_TRACKS_QUERY = gql`\n//   {\n//     tracks {\n//       id\n//       title\n//       description\n//       url\n//     }\n//   }\n// `;\n\nexport default withRoot(Root);\n","import React, { useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Lock from \"@material-ui/icons/Lock\";\n\nimport Error from \"../Shared/Error\";\n\nconst Login = ({ classes, setNewUser }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async (event, tokenAuth, client) => {\n    event.preventDefault();\n    const res = await tokenAuth();\n    localStorage.setItem(\"authToken\", res.data.tokenAuth.token);\n    client.writeData({ data: { isLoggedIn: true } });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <Lock />\n        </Avatar>\n        <Typography variant=\"title\">Войти</Typography>\n\n        <Mutation mutation={LOGIN_MUTATION} variables={{ username, password }}>\n          {(tokenAuth, { loading, error, called, client }) => {\n            return (\n              <form\n                onSubmit={event => handleSubmit(event, tokenAuth, client)}\n                className={classes.form}\n              >\n                <FormControl margin=\"normal\" required fullWidth>\n                  <InputLabel htmlFor=\"username\">Имя пользоватея</InputLabel>\n                  <Input\n                    id=\"username\"\n                    onChange={event => setUsername(event.target.value)}\n                  />\n                </FormControl>\n\n                <FormControl margin=\"normal\" required fullWidth>\n                  <InputLabel htmlFor=\"password\">Пароль</InputLabel>\n                  <Input\n                    id=\"password\"\n                    type=\"password\"\n                    onChange={event => setPassword(event.target.value)}\n                  />\n                </FormControl>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={loading || !username.trim() || !password.trim()}\n                  className={classes.submit}\n                >\n                  {loading ? \"Авторизация...\" : \"Войти\"}\n                </Button>\n                <Button\n                  onClick={() => setNewUser(true)}\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  fullWidth\n                >\n                  Новый пользователь? Зарегистрироваться\n                </Button>\n\n                {/* Error Handling */}\n                {error && <Error error={error} />}\n              </form>\n            );\n          }}\n        </Mutation>\n      </Paper>\n    </div>\n  );\n};\n\nconst LOGIN_MUTATION = gql`\n  mutation($username: String!, $password: String!) {\n    tokenAuth(username: $username, password: $password) {\n      token\n    }\n  }\n`;\n\nconst styles = theme => ({\n  root: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(\"md\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing.unit * 2\n  },\n  title: {\n    marginTop: theme.spacing.unit * 2,\n    color: theme.palette.secondary.main\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.primary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nexport default withStyles(styles)(Login);\n","import React, { useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Gavel from \"@material-ui/icons/Gavel\";\nimport VerifiedUserTwoTone from \"@material-ui/icons/VerifiedUserTwoTone\";\n\nimport Error from \"../Shared/Error\";\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nconst Register = ({ classes, setNewUser }) => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const handleSubmit = (event, createUser) => {\n    event.preventDefault();\n    createUser();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <Gavel />\n        </Avatar>\n        <Typography variant=\"headline\">Регистрация</Typography>\n\n        <Mutation\n          mutation={REGISTER_MUTATION}\n          variables={{ username, email, password }}\n          onCompleted={data => {\n            console.log({ data });\n            setOpen(true);\n          }}\n        >\n          {(createUser, { loading, error }) => {\n            return (\n              <form\n                onSubmit={event => handleSubmit(event, createUser)}\n                className={classes.form}\n              >\n                <FormControl margin=\"normal\" required fullWidth>\n                  <InputLabel htmlFor=\"username\">Имя пользователя</InputLabel>\n                  <Input\n                    id=\"username\"\n                    onChange={event => setUsername(event.target.value)}\n                  />\n                </FormControl>\n                <FormControl margin=\"normal\" required fullWidth>\n                  <InputLabel htmlFor=\"email\">Email</InputLabel>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    onChange={event => setEmail(event.target.value)}\n                  />\n                </FormControl>\n                <FormControl margin=\"normal\" required fullWidth>\n                  <InputLabel htmlFor=\"password\">Пароль</InputLabel>\n                  <Input\n                    id=\"password\"\n                    type=\"password\"\n                    onChange={event => setPassword(event.target.value)}\n                  />\n                </FormControl>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  disabled={\n                    loading ||\n                    !username.trim() ||\n                    !email.trim() ||\n                    !password.trim()\n                  }\n                  className={classes.submit}\n                >\n                  {loading ? \"Регистрация...\" : \"Зарегистрироваться\"}\n                </Button>\n                <Button\n                  onClick={() => setNewUser(false)}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  fullWidth\n                >\n                  Уже зарегистрированы? Войти\n                </Button>\n\n                {/* Error Handling */}\n                {error && <Error error={error} />}\n              </form>\n            );\n          }}\n        </Mutation>\n      </Paper>\n\n      {/* Success Dialog */}\n      <Dialog\n        open={open}\n        disableBackdropClick={true}\n        TransitionComponent={Transition}\n      >\n        <DialogTitle>\n          <VerifiedUserTwoTone className={classes.icon} />\n          New Account\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>Пользователь успешно создан!</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => setNewUser(false)}\n          >\n            Login\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst REGISTER_MUTATION = gql`\n  mutation($username: String!, $email: String!, $password: String!) {\n    createUser(username: $username, email: $email, password: $password) {\n      user {\n        username\n        email\n      }\n    }\n  }\n`;\n\nconst styles = theme => ({\n  root: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(\"md\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing.unit * 2\n  },\n  title: {\n    marginTop: theme.spacing.unit * 2,\n    color: theme.palette.openTitle\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2\n  },\n  icon: {\n    padding: \"0px 2px 2px 0px\",\n    verticalAlign: \"middle\",\n    color: \"green\"\n  }\n});\n\nexport default withStyles(styles)(Register);\n","import React, { useState } from \"react\";\n\nimport withRoot from \"../../withRoot\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\n\nexport default withRoot(() => {\n  const [newUser, setNewUser] = useState(true);\n  return newUser ? (\n    <Register setNewUser={setNewUser} />\n  ) : (\n    <Login setNewUser={setNewUser} />\n  );\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport ApolloClient, { gql } from \"apollo-boost\";\n\nimport Root from \"./Root\";\nimport Auth from \"./components/Auth\";\n\nconst client = new ApolloClient({\n  uri: `http://${process.env.DOMAIN_NAME}/${process.env.API_NAME}/`,\n  fetchOptions: {\n    credentials: \"include\"\n  },\n  request: operation => {\n    const token = localStorage.getItem(\"authToken\") || \"\";\n    operation.setContext({\n      headers: {\n        Authorization: `JWT ${token}`\n      }\n    });\n  },\n  clientState: {\n    defaults: {\n      isLoggedIn: !!localStorage.getItem(\"authToken\")\n    }\n  }\n});\n\nconst IS_LOGGED_IN_QUERY = gql`\n  query {\n    isLoggedIn @client\n  }\n`;\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Query query={IS_LOGGED_IN_QUERY}>\n      {({ data }) => (data.isLoggedIn ? <Root /> : <Auth />)}\n    </Query>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}